{"version":3,"sources":["Login/get_token.tsx","UpdateState/Actions.tsx","Menus/Types.tsx","Login/Login.tsx","CreateAccount/request_account.tsx","CreateAccount/CreateAccount.tsx","UpdateState/Reducer.tsx","UpdateState/Store.tsx","Workplace/Order.tsx","Workplace/GetOrders.tsx","Workplace/Orders.tsx","Workplace/Workplace.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["axios","require","config","mdw_server","process","get_token","id","password","a","token","method","url","headers","data","then","response","catch","error","console","log","Types","changePassword","value","type","payload","changeUser","changeMenu","Login","CreateAccount","Workplace","props","dispatch","useDispatch","useSelector","state","username","user","menu","Menus","getToken","new_token","className","placeholder","onChange","e","new_username","target","new_password","onClick","request_account","email","JSON","stringify","password2","createAccount","Error","alert","new_email","default_state","orders","index","pagesize","loginStore","createStore","action","new_state","Math","max","min","length","pagasize","Order","changeOrder","order_id","ammount","fullfield","order_number","String","getOrders","Orders","updateOrders","new_orders","updateIndex","increase","increaseIndex","decreaseIndex","onClickCapture","slice","map","order","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAAIA,G,MAAQC,EAAQ,IAEPA,EAAQ,IAEdC,SAEP,IAAIC,EAAuBC,2BAKpB,SAAeC,EAAtB,oC,4CAAO,WAAyBC,EAAYC,GAArC,iBAAAC,EAAA,4DAEgB,GACfC,EAAgB,GAEhBP,EAAS,CACbQ,OAAQ,MACRC,IAAKR,EAAa,gBAAkBG,EAAK,aAAeC,EACxDK,QAAS,GACTC,KAPmB,IAFhB,SAYGb,EAAME,GACXY,MAAK,SAAUC,GAChBN,EAAQM,EAASF,KAAKJ,SAErBO,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,MAjBT,gCAoBIR,GApBJ,4C,sBAFPS,QAAQC,IAAI,cAAgBhB,G,WCRfiB,EACF,QADEA,EAEC,WAFDA,EAGE,YAHFA,EAIH,OAJGA,EAKF,QALEA,EAMH,OANGA,EAOD,SAPCA,EAQD,SARCA,EASF,QATEA,EAUC,WASDC,EAAiB,SAACC,GAAD,MAAgC,CAC1DC,KAAMH,EACNI,QAASF,IAQAG,EAAa,SAACH,GAAD,MAA4B,CAClDC,KAAMH,EACNI,QAASF,IAQAI,EAAa,SAACJ,GAAD,MAA6B,CACnDC,KAAMH,EACNI,QAASF,ICpCEF,EAND,CACVO,MAAO,QACPC,cAAe,gBACfC,UAAW,a,OC+DAF,MA3DR,SAAeG,GAGlB,IAAIC,EAAWC,cAEXvB,EAAawB,aAAY,SAACC,GAAD,OAAgBA,EAAMzB,SAC/C0B,EAAiBF,aAAY,SAACC,GAAD,OAAgBA,EAAME,QACnD7B,EAAiB0B,aAAY,SAACC,GAAD,OAAgBA,EAAM3B,YACnD8B,EAAYJ,aAAa,SAACC,GAAD,OAAgBA,EAAMG,QAMnD,GAHa,IAAT5B,GAAasB,EAAUL,EAAY,CAAEW,KAAMC,EAAMT,aAGjDQ,IAASC,EAAMX,MAAO,OAAO,KAEjC,IAgBIY,EAAQ,uCAAG,4BAAA/B,EAAA,+EAEuBH,EAAU8B,EAAS5B,GAF1C,OAEHiC,EAFG,OAGPtB,QAAQC,IAAIqB,GACZT,EF7B0C,CAClDR,KAAMH,EACNI,QE2B2B,CAAEf,MAAO+B,KAC5BtB,QAAQC,IAAIV,GACZS,QAAQC,IAAIgB,GANL,kDASPjB,QAAQC,IAAR,MATO,0DAAH,qDAaZ,OAAS,sBAAKsB,UAAU,qBAAf,UACG,oBAAIA,UAAU,gBAAd,gCACC,sBAAKA,UAAU,qBAAf,UACO,uBAAOlB,KAAK,WAAWkB,UAAU,iBAAiBC,YAAY,WAAWC,SAhCxE,SAACC,GAClB,IAAIC,EAAuBD,EAAEE,OAAOxB,MAEpCS,EAAUN,EAAY,CAAEW,KAAMS,QA8Bd,uBAAOtB,KAAK,WAAWkB,UAAU,iBAAiBC,YAAY,WAAWC,SA3BxE,SAACC,GAClB,IAAIG,EAAuBH,EAAEE,OAAOxB,MAEpCS,EAAUV,EAAgB,CAACd,SAAUwC,QAyBrB,gCACI,wBAAQN,UAAU,oBAAoBO,QAvBvC,WACnBjB,EAAUL,EAAY,CAAEW,KAAMC,EAAMV,kBAsBhB,mCACA,wBAAQa,UAAU,qBAAqBO,QAAST,EAAhD,+BC3DxBvC,G,MAAQC,EAAQ,IAIb,SAAegD,EAAtB,wC,4CAAO,WAA+B3C,EAAW4C,EAAe3C,EAAkBE,GAA3E,eAAAD,EAAA,6DACCN,EAAS,CACbQ,OAAQ,OACRC,IAAKR,8CAAqCG,EAAK,aAAeC,EAAW,UAAY2C,EACrFtC,QAAS,CACL,cAAiB,UAAYH,IAL9B,SASGT,EAAME,GACXY,MAAK,SAAUC,GAChBG,QAAQC,IAAIgC,KAAKC,UAAUrC,EAASF,UAEnCG,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,MAdT,4C,sBC4EQW,MAzER,SAAuBE,GAE1B,IAAIC,EAAWC,cAEXvB,EAAawB,aAAY,SAACC,GAAD,OAAgBA,EAAMzB,SAC/C0B,EAAiBF,aAAY,SAACC,GAAD,OAAgBA,EAAME,QACnDc,EAAajB,aAAY,SAACC,GAAD,OAAgBA,EAAMgB,SAC/C3C,EAAiB0B,aAAY,SAACC,GAAD,OAAgBA,EAAM3B,YACnD8C,EAAkBpB,aAAY,SAACC,GAAD,OAAgBA,EAAMmB,aAIxD,GAFgBpB,aAAa,SAACC,GAAD,OAAgBA,EAAMG,UAEtCC,EAAMV,cAAe,OAAO,KAEzC,IA6BI0B,EAAa,uCAAG,sBAAA9C,EAAA,kEAGRD,GAAY8C,EAHJ,sBAGsB,IAAIE,MAAM,yBAHhC,uBAKNN,EAAgBd,EAASe,EAAM3C,EAASE,GALlC,OAMZsB,EAAUL,EAAY,CAACW,KAAMC,EAAMX,SANvB,gDASZT,QAAQC,IAAR,MACAqC,MAAM,EAAD,IAVO,yDAAH,qDAcjB,OAAS,sBAAKf,UAAU,uBAAf,UACG,oBAAIA,UAAU,kBAAd,mCACA,wBAAQA,UAAU,4BAA4BO,QApBrC,WACjBjB,EAAUL,EAAY,CAAEW,KAAMC,EAAMX,UAmB5B,mCACC,sBAAKc,UAAU,uBAAf,UACO,uBAAOlB,KAAK,WAAWkB,UAAU,mBAAmBC,YAAY,WAAWC,SA/C1E,SAACC,GAClB,IAAIC,EAAuBD,EAAEE,OAAOxB,MAEpCS,EAAUN,EAAY,CAAEW,KAAMS,QA6Cd,uBAAOtB,KAAK,QAAQkB,UAAU,gBAAgBC,YAAY,QAAQC,SA7BpE,SAACC,GACf,IAAIa,EAAoBb,EAAEE,OAAOxB,MAEjCS,EJRgD,CACpDR,KAAMH,EACNI,QIM2B,CAAC0B,MAAOO,QA2Bf,uBAAOlC,KAAK,WAAWkB,UAAU,mBAAmBC,YAAY,WAAWC,SA3C1E,SAACC,GAClB,IAAIG,EAAuBH,EAAEE,OAAOxB,MAEpCS,EAAUV,EAAgB,CAACd,SAAUwC,QAyCrB,uBAAOxB,KAAK,WAAWkB,UAAU,oBAAoBC,YAAY,kBAAkBC,SArCjF,SAACC,GACnB,IAAIG,EAAuBH,EAAEE,OAAOxB,MAEpCS,EJZyD,CAC7DR,KAAMH,EACNI,QIU+B,CAAC6B,UAAWN,QAmCvB,8BACI,wBAAQN,UAAU,uBAAuBO,QAASM,EAAlD,4C,gBCtEtBI,EAAqB,CACvBtB,KAAM,GACN7B,SAAU,GACV8C,UAAW,GACXhB,KAAMC,EAAMX,MACZuB,MAAO,GACPzC,MAAO,GACPkD,OAAQ,GACRC,MAAO,EACPC,SAAU,GCPCC,EAFOC,aDYM,WAAgD,IAAtC7B,EAAqC,uDAA7BwB,EAAgBM,EAAa,uCACnEC,EAAc,eAAQ/B,GAE1B,OAAS8B,EAAOzC,MACZ,KAAKH,EAGD,OAFAF,QAAQC,IAAI6C,GACZC,EAAUxD,MAAQuD,EAAOxC,QAAQf,MAC1BwD,EACX,KAAK7C,EAED,OADA6C,EAAU5B,KAAO2B,EAAOxC,QAAQa,KACzB4B,EACX,KAAK7C,EAED,OADA6C,EAAU1D,SAAWyD,EAAOxC,QAAQjB,SAC7B0D,EACX,KAAK7C,EAED,OADA6C,EAAUf,MAAQc,EAAOxC,QAAQ0B,MAC1Be,EACX,KAAK7C,EAED,OADA6C,EAAU7B,KAAO4B,EAAOxC,QAAQY,KACzB6B,EACX,KAAK7C,EAED,OADA6C,EAAUZ,UAAYW,EAAOxC,QAAQ6B,UAC9BY,EACX,KAAK7C,EAID,OAHA6C,EAAUN,OAASK,EAAOxC,QAAQmC,OAClCM,EAAUL,MAAQF,EAAcE,MAChCK,EAAUJ,SAAWH,EAAcG,SAC5BI,EACX,KAAK7C,EAED,OADA6C,EAAUL,MAAQM,KAAKC,IAAI,EAAED,KAAKE,IAAIJ,EAAOxC,QAAQoC,MAAM1B,EAAMyB,OAAOU,OAASnC,EAAM2B,WAChFI,EACX,KAAK7C,EAED,OADA6C,EAAUK,SAAWN,EAAOxC,QAAQqC,SAC7BI,EACX,KAAK7C,EACD,OAAO,eAAKsC,GAChB,QACI,OAAOxB,M,MEjBJqC,MA9BR,SAAezC,GAEKA,EAAM0C,YAA7B,IACIC,EAAmB3C,EAAM2C,SACzBvB,EAAgBpB,EAAMoB,MACtBwB,EAAkB5C,EAAM4C,QACxBC,EAAoB7C,EAAM6C,UAC1BC,EAAuB9C,EAAM8C,aAEjC,OAAS,sBAAKnC,UAAU,QAAf,UAED,sBAAKA,UAAU,aAAf,UACA,8BAAG,wCAAegC,KAElB,8BAAG,0CAAiBvB,KAEpB,kCAAI,6CAAoB2B,OAAOF,SAI/B,sBAAKlC,UAAU,aAAf,UAEA,8BAAG,0CAAiBiC,KACpB,8BAAG,+CAAsBE,KACzB,mBAAGnC,UAAU,YAAb,gCC7BRzC,EAAQC,EAAQ,GAEhBE,EAAuBC,2BAEpB,SAAe0E,EAAtB,kC,4CAAO,WAAyBrE,GAAzB,iBAAAD,EAAA,6DAECmD,EAAc,GAEdzD,EAAS,CACbQ,OAAQ,MACRC,IAAKR,EAAa,2BAClBS,QAAS,CACL,cAAiB,UAAYH,IAR9B,SAYGT,EAAME,GACXY,MAAK,SAAUC,GACZG,QAAQC,IAAIgC,KAAKC,UAAUrC,EAASF,OACpC8C,EAAS5C,EAASF,QAErBG,OAAM,SAAUC,GACjBC,QAAQC,IAAIF,MAlBT,gCAqBI0C,GArBJ,4C,sBCoEQoB,MAjER,SAAgBjD,GAEnB,IAAIC,EAAWC,cACXvB,EAAawB,aAAY,SAACC,GAAD,OAAgBA,EAAMzB,SAC/CkD,EAAgB1B,aAAY,SAACC,GAAD,OAAgBA,EAAMyB,UAClDE,EAAgB5B,aAAY,SAACC,GAAD,OAAgBA,EAAM2B,YAClDD,EAAa3B,aAAY,SAACC,GAAD,OAAgBA,EAAM0B,SAG/CoB,EAAY,uCAAG,4BAAAxE,EAAA,sEACcsE,EAAUrE,GADxB,OACXwE,EADW,OAEf/D,QAAQC,IAAK8D,GACblD,ET+BiD,CACrDR,KAAMH,EACNI,QSjC2B,CAACmC,OAAQsB,KAHjB,2CAAH,qDAMI,GAAjBtB,EAAOU,QAAaW,IAEvB,IAAIE,EAAW,uCAAG,WAAOC,GAAP,SAAA3E,EAAA,sDAEduB,ET6BgD,CACpDR,KAAMH,EACNI,QS/B2B,CAAEoC,MAAOA,GADXuB,EAAWtB,GAAa,EAAIA,MADnC,2CAAH,sDAKXuB,EAAa,uCAAG,sBAAA5E,EAAA,sDAChB0E,GAAY,GADI,2CAAH,qDAIbG,EAAa,uCAAG,sBAAA7E,EAAA,sDAChB0E,GAAY,GADI,2CAAH,qDAOjB,OAHAhE,QAAQC,IAAIwC,GACZzC,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAIyC,GAER,sBAAKnB,UAAU,SAAf,UAEA,gCACI,uBAAOlB,KAAK,OAAOmB,YAAY,cAAcD,UAAU,qBACvD,wBAAQA,UAAU,oBAAlB,oBACA,wBAAQA,UAAU,oBAAoB6C,eAAgBN,EAAtD,wBAIJ,gCAEQrB,EAAO4B,MAAM3B,EAAMA,EAAQC,GAAU2B,KAAI,SAACC,EAAW7B,GACjD,OAAQ,cAAC,EAAD,CAAOa,SAAUgB,EAAMhB,SAAUvB,MAAOuC,EAAMvC,MACtDwB,QAASe,EAAMf,QAASC,UAAWc,EAAMd,UACzCC,aAAca,EAAMb,kBAK5B,oBAAGnC,UAAU,kBAAb,UAEI,wBAAQA,UAAU,oBAAoBO,QAASqC,EAA/C,sBACA,wBAAQ5C,UAAU,oBAAoBO,QAASoC,EAA/C,4BCVDvD,MA7CR,SAAmBC,GAGtB,IAAIC,EAAWC,cAYf,OAViBC,aAAY,SAACC,GAAD,OAAgBA,EAAMzB,SAC9BwB,aAAY,SAACC,GAAD,OAAgBA,EAAME,QACvCH,aAAa,SAACC,GAAD,OAAgBA,EAAMG,UAQtCC,EAAMT,UAAkB,KAU5B,8BACL,sBAAKY,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wBAAQA,UAAU,UAAlB,qCACA,sBAAKA,UAAU,mBAAf,UACI,uCACA,iEACA,iDAIR,cAAC,EAAD,CAAQkB,OA3BI,CAAC,CACjBc,SAAU,cACVvB,MAAO,uBACPwB,QAAS,gBA0BL,oBAAIjC,UAAU,mBAAmBO,QAjB1B,WACXjB,EVeqB,CACzBR,KAAMH,EACNI,QAAS,MUDD,4BC3BGkE,MAbf,WACE,OACE,eAAC,IAAD,CAAUC,MAAO7B,EAAjB,UACG,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCQ8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhF,MAAK,YAAkD,IAA/CiF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7446d3d1.chunk.js","sourcesContent":["let axios = require('axios')\n\nlet dotenv = require('dotenv')\n\ndotenv.config()\n\nlet mdw_server: string =  (process.env.REACT_APP_MDW_SERVER as string)\n\n\nconsole.log(\"mdw server \" + mdw_server)\n\nexport async function get_token(id: string, password: string): Promise<string> {\n\n    let data: string = '';\n    let token: string = ''\n\n    var config = {\n    method: 'get',\n    url: mdw_server + '/gettoken?id=' + id + '&password=' + password,\n    headers: { },\n    data : data\n    };\n\n    await axios(config)\n    .then(function (response: any) {\n    token = response.data.token\n    })\n    .catch(function (error: any) {\n    console.log(error);\n    });\n\n    return token\n\n}","// types of action\nexport const Types = {\n    LOGIN: \"LOGIN\",\n    PASSWORD: \"PASSWORD\",\n    PASSWORD2: \"PASSWORD2\",\n    USER: \"USER\",\n    EMAIL: \"EMAIL\",\n    MENU: \"MENU\",\n    LOGOUT: \"LOGOUT\",\n    ORDERS: \"ORDERS\",\n    INDEX: \"INDEX\",\n    PAGESIZE: \"PAGESIZE\",\n};\n  // actions\nexport const newLogin = (value: {token: string})  => ({\n    type: Types.LOGIN,\n    payload: value\n  });\n  \n\nexport const changePassword = (value: {password: string}) => ({\n    type: Types.PASSWORD,\n    payload: value\n})\n\nexport const changePassword2 = (value: {password2: string }) => ({\n    type: Types.PASSWORD2,\n    payload: value\n})\n\nexport const changeUser = (value: {user: string}) => ({\n    type: Types.USER,\n    payload: value\n})\n\nexport const changeEmail = (value: {email: string}) => ({\n    type: Types.EMAIL,\n    payload: value\n})\n\nexport const changeMenu = (value: {menu: string} ) => ({\n    type: Types.MENU,\n    payload: value\n})\n\nexport const logOut = () => ({\n    type: Types.LOGOUT,\n    payload: {}\n})\n\nexport const changeOrders = (value: {orders: any[]}) => ({\n    type: Types.ORDERS,\n    payload: value\n})\n\nexport const changeIndex = (value: {index: number}) => ({\n    type: Types.INDEX,\n    payload: value\n})\n\nexport const changePageSize = (value: {pagesize: number}) => ({\n    type: Types.PAGESIZE,\n    payload: value\n})\n\n","const Types = {\n    Login: \"Login\",\n    CreateAccount: \"CreateAccount\",\n    Workplace: \"Workplace\",\n};\n\nexport default Types","import React from 'react'\nimport './Login.css'\nimport { get_token } from './get_token'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { newLogin,changePassword,changeEmail,changeUser,changeMenu } from '../UpdateState/Actions'\nimport Menus from './../Menus/Types'\n\nexport function Login(props: any) {\n       \n\n    let dispatch = useDispatch()\n\n    let token: any = useSelector((state: any) => state.token)\n    let username : any = useSelector((state: any) => state.user)\n    let password : any = useSelector((state: any) => state.password)\n    let menu: any = useSelector( (state: any) => state.menu)\n           \n           \n    if( token != \"\") dispatch( changeMenu( { menu: Menus.Workplace } ))\n      \n    \n    if (menu !== Menus.Login) return null\n\n    let updateUsername = (e: any) => {\n        var new_username: string = e.target.value\n\n        dispatch( changeUser( { user: new_username } ) )\n    }\n    \n    let updatePassword = (e: any) => {\n        let new_password: string = e.target.value\n\n        dispatch( changePassword( {password: new_password }) )   \n    }\n    \n    let createNewAccount = () => {\n        dispatch( changeMenu( { menu: Menus.CreateAccount } ) )\n    }\n\n    let getToken = async () => {\n        try {\n            var new_token: string = await get_token(username,password);\n            console.log(new_token)\n            dispatch( newLogin({ token: new_token } ));\n            console.log(token)\n            console.log(username)\n        }\n        catch(e){\n            console.log(e)\n        }\n    }\n    \n    return ( <div className=\"login-div-external\">\n                <h1 className=\"login-message\"> Login backoffice </h1>\n                 <div className=\"login-div-internal\">\n                        <input type=\"username\" className=\"login-username\" placeholder=\"Username\" onChange={updateUsername}/>\n                        <input type=\"password\" className=\"login-password\" placeholder=\"Password\" onChange={updatePassword}/>\n                        <div>\n                            <button className=\"login-new-account\" onClick={createNewAccount} > Request new account </button>\n                            <button className=\"login-login-button\" onClick={getToken}> Login </button>\n                        </div>\n                    </div>   \n                </div>)\n    \n}\n\nexport default Login","var axios = require('axios');\n\nlet mdw_server: string =  (process.env.REACT_APP_MDW_SERVER as string)\n\nexport async function request_account(id: string,email: string, password: string, token: string): Promise<void> {\n    var config = {\n    method: 'post',\n    url: mdw_server + '/requestaccount?id=' + id + '&password=' + password + '&email=' + email,\n    headers: { \n        'Authorization': 'Bearer ' + token\n    }\n    };\n\n    await axios(config)\n    .then(function (response: any) {\n    console.log(JSON.stringify(response.data));\n    })\n    .catch(function (error: any) {\n    console.log(error);\n    });\n\n}","import React from 'react'\nimport './CreateAccount.css'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { newLogin,changePassword,changeEmail,changeUser,changeMenu, changePassword2 } from '../UpdateState/Actions'\nimport Menus from './../Menus/Types'\nimport { request_account } from './request_account'\n\nexport function CreateAccount(props: any) {\n   \n    let dispatch = useDispatch()\n\n    let token: any = useSelector((state: any) => state.token)\n    let username : any = useSelector((state: any) => state.user)\n    let email: any = useSelector((state: any) => state.email)\n    let password : any = useSelector((state: any) => state.password)\n    let password2 : any = useSelector((state: any) => state.password2)\n    \n    let menu: any = useSelector( (state: any) => state.menu)\n    \n    if (menu !== Menus.CreateAccount) return null\n\n    let updateUsername = (e: any) => {\n        var new_username: string = e.target.value\n\n        dispatch( changeUser( { user: new_username } ) )\n    }\n    \n    let updatePassword = (e: any) => {\n        let new_password: string = e.target.value\n\n        dispatch( changePassword( {password: new_password }) )   \n    }\n\n     \n    let updatePassword2 = (e: any) => {\n        let new_password: string = e.target.value\n\n        dispatch( changePassword2( {password2: new_password }) )   \n    }\n\n    let updateEmail = (e: any) => {\n        let new_email: string = e.target.value\n\n        dispatch( changeEmail( {email: new_email} ) )\n    }\n\n    let returnMainMenu = () => {\n        dispatch( changeMenu( { menu: Menus.Login} ) )\n    }\n\n    let createAccount = async () => {\n        try {\n\n            if( password != password2 ) throw new Error(\"Passwords don't match\")\n\n            await request_account(username,email,password,token)\n            dispatch( changeMenu( {menu: Menus.Login} ) );\n        }\n        catch(e){\n            console.log(e)\n            alert(e)\n        }\n    }\n    \n    return ( <div className=\"account-div-external\">\n                <h1 className=\"account-message\"> Request new account </h1>\n                <button className=\"account-return-login-menu\" onClick={returnMainMenu}> Return to main menu </button>\n                 <div className=\"account-div-internal\">\n                        <input type=\"username\" className=\"account-username\" placeholder=\"Username\" onChange={updateUsername}/>\n                        <input type=\"email\" className=\"account-email\" placeholder=\"Email\" onChange={updateEmail}/>\n                        <input type=\"password\" className=\"account-password\" placeholder=\"Password\" onChange={updatePassword}/>\n                        <input type=\"password\" className=\"account-password2\" placeholder=\"Repeat password\" onChange={updatePassword2}/>\n                        <div>\n                            <button className=\"account-login-button\" onClick={createAccount} > Request new account </button>\n                        </div>\n                    </div>   \n                </div>)\n    \n}\n\nexport default CreateAccount","import { Types } from './Actions'\nimport Menus from '../Menus/Types'\n\nconst default_state: any = {\n    user: '', \n    password: '',\n    password2: '',\n    menu: Menus.Login,\n    email: '',\n    token: '',\n    orders: [],\n    index: 0,\n    pagesize: 5,\n}\n\nexport const loginReducer = function (state = default_state , action: any) {\n    var new_state: any = { ...state }\n\n    switch ( action.type ) {\n        case Types.LOGIN: \n            console.log(action)\n            new_state.token = action.payload.token\n            return new_state;\n        case Types.MENU: \n            new_state.menu = action.payload.menu\n            return new_state\n        case Types.PASSWORD:\n            new_state.password = action.payload.password\n            return new_state\n        case Types.EMAIL:\n            new_state.email = action.payload.email\n            return new_state\n        case Types.USER:\n            new_state.user = action.payload.user\n            return new_state\n        case Types.PASSWORD2:\n            new_state.password2 = action.payload.password2\n            return new_state\n        case Types.ORDERS:\n            new_state.orders = action.payload.orders\n            new_state.index = default_state.index\n            new_state.pagesize = default_state.pagesize\n            return new_state\n        case Types.INDEX:\n            new_state.index = Math.max(0,Math.min(action.payload.index,state.orders.length - state.pagesize))\n            return new_state\n        case Types.PAGESIZE:\n            new_state.pagasize = action.payload.pagesize\n            return new_state\n        case Types.LOGOUT:\n            return { ...default_state}\n        default: \n            return state;\n    } \n\n}","import { createStore } from 'redux'\nimport { loginReducer } from './Reducer'\n\nlet loginStore: any = createStore(loginReducer)\n\nexport default loginStore","import './Workplace.css'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { newLogin,changePassword,changeEmail,changeUser,changeMenu } from '../UpdateState/Actions'\nimport Menus from './../Menus/Types'\n\nexport function Order(props: any) {\n       \n    let changeOrder: any = props.changeOrder\n    let order_id: string = props.order_id\n    let email: string = props.email\n    let ammount: string = props.ammount \n    let fullfield: string = props.fullfield\n    let order_number: string = props.order_number\n\n    return ( <div className=\"order\">\n\n            <div className=\"order-info\">\n            <p><b>Order: </b>{order_id}</p>\n       \n            <p><b>Contact: </b>{email}</p>\n\n            <p> <b> Fullfield: </b>{String(fullfield)}</p>\n\n            </div>\n\n            <div className=\"order-info\">\n\n            <p><b>Ammount: </b>{ammount}</p>\n            <p><b>Order number: </b>{order_number}</p>\n            <p className=\"view-more\"> View more </p>\n            </div>\n    </div>)\n    \n}\n\nexport default Order","let axios = require('axios')\n\nlet mdw_server: string =  (process.env.REACT_APP_MDW_SERVER as string)\n\nexport async function getOrders(token: string): Promise<any>{ \n    \n    let orders: any = []\n\n    var config = {\n    method: 'get',\n    url: mdw_server + '/getordersdb?data=client',\n    headers: { \n        'Authorization': 'Bearer ' + token\n    }\n    };\n\n    await axios(config)\n    .then(function (response: any) {\n        console.log(JSON.stringify(response.data));\n        orders = response.data\n    })\n    .catch(function (error: any) {\n    console.log(error);\n    });\n\n    return orders\n    \n}","import './Workplace.css'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { newLogin,changePassword,changeEmail,changeUser,changeMenu, changeOrders, changeIndex } from '../UpdateState/Actions'\nimport Menus from './../Menus/Types'\nimport Order from './Order'\nimport { getOrders } from './GetOrders'\n\nexport function Orders(props: any) {\n           \n    let dispatch = useDispatch()\n    let token: any = useSelector((state: any) => state.token)\n    let orders: any[] = useSelector((state: any) => state.orders)\n    let pagesize: any = useSelector((state: any) => state.pagesize)\n    let index: any = useSelector((state: any) => state.index)\n\n    \n    let updateOrders = async () => {\n        let new_orders: any =  await getOrders(token)\n        console.log( new_orders )\n        dispatch( changeOrders({orders: new_orders}))\n    }\n    \n    if(orders.length == 0) updateOrders()\n\n    let updateIndex = async (increase: boolean) => {\n        let change: number = increase ? pagesize : (-1 * pagesize)\n        dispatch( changeIndex( { index: index + change } ) )\n    }\n\n    let increaseIndex = async () => {\n        updateIndex(true)\n    }\n\n    let decreaseIndex = async () => {\n        updateIndex(false)\n    }\n\n    console.log(orders)\n    console.log(pagesize)\n    console.log(index)\n    return (\n        <div className=\"orders\">\n        \n        <div>\n            <input type=\"text\" placeholder=\"Find orders\" className=\"searchOrderInput\"></input>\n            <button className=\"searchOrderButton\">Search</button>\n            <button className=\"searchOrderButton\" onClickCapture={updateOrders}>Refresh</button>\n\n        </div>\n        \n        <div>\n            {\n                orders.slice(index,index + pagesize).map((order: any,index: number) => {\n                    return (<Order order_id={order.order_id} email={order.email}\n                    ammount={order.ammount} fullfield={order.fullfield} \n                    order_number={order.order_number}>\n                    </Order>)\n                })\n                \n            }\n            <p className=\"next-page-order\"> \n                \n                <button className=\"button-page-order\" onClick={decreaseIndex}>previous</button>  \n                <button className=\"button-page-order\" onClick={increaseIndex}>next</button> \n\n            </p>\n        </div>\n        </div>\n    )\n    \n}\n\nexport default Orders","import './Workplace.css'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { newLogin,changePassword,changeEmail,changeUser,changeMenu,logOut } from '../UpdateState/Actions'\nimport Menus from './../Menus/Types'\nimport Order from './Order'\nimport Orders from './Orders'\nimport { getOrders } from './GetOrders'\n\nexport function Workplace(props: any) {\n       \n\n    let dispatch = useDispatch()\n\n    let token: any = useSelector((state: any) => state.token)\n    let username : any = useSelector((state: any) => state.user)\n    let menu: any = useSelector( (state: any) => state.menu)\n\n    let orders: any[] = [{\n        order_id: \"orderid1223\",\n        email: \"customer@example.com\",\n        ammount: \"1000000 $\"\n    }]\n    \n    if (menu !== Menus.Workplace) return null\n    \n    let createNewAccount = () => {\n        dispatch( changeMenu( { menu: Menus.Login } ) )\n    }\n\n    let gologOut = () => {\n        dispatch( logOut() )\n    }\n    \n    return ( <div>\n        <div className=\"workplace-menu\">\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\"> Middleware backoffice </button>\n                <div className=\"dropdown-content\">\n                    <a>Orders</a>\n                    <a>Review account creation requests</a>\n                    <a>Statistics</a>\n                </div>\n                </div>\n            \n            <Orders orders={orders}></Orders>\n            \n            <h1 className=\"workplace-logout\" onClick={gologOut}> Logout </h1>\n        </div>\n\n    </div>)\n    \n}\n\nexport default Workplace","import Login from './Login/Login'\nimport CreateAccount from './CreateAccount/CreateAccount';\nimport { Provider } from 'react-redux'\nimport loginStore from './UpdateState/Store'\nimport Workplace  from './Workplace/Workplace';\n\nfunction App() {\n  return (\n    <Provider store={loginStore} >\n       <Login></Login>\n       <CreateAccount></CreateAccount>\n       <Workplace></Workplace>\n    </Provider>\n   \n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}