{"version":3,"sources":["Login/Login.tsx","UpdateState/Actions.tsx","UpdateState/Reducer.tsx","Menus/Types.tsx","UpdateState/Store.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Login","props","id","useParams","Educaton","className","Publications","Bio","href","console","log","to","path","element","Types","default_state","user","password","password2","menu","CreateAccount","Products","Workplace","OrderInfo","OrderInfoEdit","ProductsToEdit","Stock","SearchOrder","Receptions","ReceptionInfo","email","token","orders","index","pagesize","currentOrder","originalOrder","fieldsOrder","fileProducts","productsWithError","receptionsubmited","receptions","receptionInfo","findOrder","cancelOrder","filterStateOrder","loginStore","createStore","state","action","new_state","type","payload","Math","max","min","length","pagasize","edit","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ff051dc.chunk.js","sourcesContent":["import './Login.css'\nimport { get_token } from './get_token'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { newLogin,changePassword,changeUser,changeMenu, editOrder } from '../UpdateState/Actions'\nimport Menus from './../Menus/Types'\nimport { Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    useParams,\n    Routes,\n    useNavigate,\n  } from \"react-router-dom\";\nimport { useReducer } from 'react'\n\n\nexport function Login(this: any, props: any) {\n        \n    let id  = useParams()\n\n    console.log(id)\n    /*\n    return ( <div className=\"login-div-external\">\n                <h1 className=\"login-message\"> Login backoffice </h1>\n                 <div className=\"login-div-internal\">\n                        <input type=\"username\" className=\"login-username\" placeholder=\"Username\" onChange={updateUsername}/>\n                        <input type=\"password\" className=\"login-password\" placeholder=\"Password\" onChange={updatePassword}/>\n                        <div>\n                            <button className=\"login-new-account\" onClick={createNewAccount} > Request new account </button>\n                            <button className=\"login-login-button\" onClick={getToken}> Login </button>\n                        </div>\n                    </div>   \n                </div>)\n                */\n\n                \n              \n\n\n            function Educaton(props: any) {\n                return <><div className=\"NewAccountContainer\">\n                <p>Bachelors in Computer Science 2016-2019\nUniversity of Minho</p>     \n\n<p>Masters in Informatics engineering 2019-2022\nUniversity of Minho</p>   \n\n                <p>  Doctoral Program in Informatics Engineering 2022-\n                University of Porto, Faculty of Engineering   </p>\n</div> </>\n            }\n\n                function Publications(props: any) {\n                    return <><div className=\"NewAccountContainer\">\n                    <p>Linear Programming Meets Block-based Languages Hugo Gião, Rui Pereira, Jácome Cunha\nIEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC’21)</p>       \n\n\n                <p>Towards a Block-based Language for Linear Programming? Hugo Gião, Rui Pereira, Jácome\nCunha 12th National Symposium of Informatics (INForum’21)</p> \n\n                <p>LPBlocks - A Block-based Language for Linear Programming - Master thesis supervised by\nJácome Cunha and co-supervised by Rui Pereira,</p>\n                    <p>A model-driven approach for DevOps Hugo Gião IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC’22)</p>\n</div> \n                    <p> \n</p>\n    </>\n                }\n                \n                function Bio(props: any) {\n                    return <><div className=\"NewAccountContainer\">\n                    <p>\n                    Hi, my name is Hugo da Gião, I am currently doing research at the intersection of DevOps and Model-driven engineering, and i am a researcher at HASLab/INESC TEC. I am also a Ph.D. student in Informatics Engineering at FEUP working on a thesis titled \"A Model-driven approach to DevOps\" whose end goal is to research methodologies and tools that would allow developers to create different DevOps pipelines without resorting to the use of specific tools. I also did research in the field of visual languages where I worked on creating a visual language to allow non-technical users to solve optimization problems. </p>     \n                    <p>My CV can accessed <a href=\"https://h4g0.github.io/cv.pdf\">here</a>\n.</p>\n\n                       </div> </>\n        \n        }\n                \n              \n\n    return (\n        <Router>\n          <div className=\"LoginContainer\">\n            <h1 >Hugo Afonso da Gião</h1>\n            \n            <Link to=\"/Bio\">            \n            \n            <button>Bio</button>\n\n            </Link>\n\n            <Link to=\"/Publications\">            \n            \n            <button>Publications</button>\n\n            </Link>\n\n            <Link to=\"/Education\">            \n            \n            <button>Education</button>\n\n            </Link>\n           </div>\n           \n          \n            <Routes>        \n            \n            <Route path=\"/\" element={<Bio />} />\n\n            <Route path=\"Bio\" element={<Bio />} />\n\n            \n            <Route path=\"Publications\" element={<Publications />} />\n\n            <Route path=\"Education\" element={<Educaton />} />\n\n            </Routes>\n\n            \n        </Router>\n\n\n      \n    )\n    \n}\n\nexport default Login","import { ORDER_CLIENT } from \"../TYPES/OrderType\";\n\n// Declaração das actions \n\n// types of action\nexport const Types = {\n    LOGIN: \"LOGIN\",\n    PASSWORD: \"PASSWORD\",\n    PASSWORD2: \"PASSWORD2\",\n    USER: \"USER\",\n    EMAIL: \"EMAIL\",\n    MENU: \"MENU\",\n    LOGOUT: \"LOGOUT\",\n    ORDERS: \"ORDERS\",\n    INDEX: \"INDEX\",\n    PAGESIZE: \"PAGESIZE\",\n    CURRENTORDER: \"CURRENTORDER\",\n    ORIGINALORDER: \"ORIGINALORDER\",\n    FIELDSORDER: \"FIELDSORDER\",\n    EDITORDER: \"EDITORDER\", \n    FILEPRODUCTS: \"FILEPRODUCTS\", \n    RECEPTIONFAILED: \"RECEPTIONFAILED\",\n    RECEPTIONSUBMITED: \"RECEPTIONSUBMITED\",\n    RECEPTIONS: \"RECEPTIONS\",\n    RECEPTIONINFO: \"RECEPTIONINFO\",\n    FINDORDER: \"FINDORDER\",\n    CANCELORDERSTATE: \"CANCELORDERSTATE\",\n    FILTERSTATEORDER: \"FILTERSTATEORDER\"\n};\n\n// Actions para mudar o valor das variáveis globais\n\nexport const newLogin = (value: {token: string})  => ({\n    type: Types.LOGIN,\n    payload: value\n  });\n  \n\nexport const changePassword = (value: {password: string}) => ({\n    type: Types.PASSWORD,\n    payload: value\n})\n\nexport const changePassword2 = (value: {password2: string }) => ({\n    type: Types.PASSWORD2,\n    payload: value\n})\n\nexport const changeUser = (value: {user: string}) => ({\n    type: Types.USER,\n    payload: value\n})\n\nexport const changeEmail = (value: {email: string}) => ({\n    type: Types.EMAIL,\n    payload: value\n})\n\nexport const changeMenu = (value: {menu: string} ) => ({\n    type: Types.MENU,\n    payload: value\n})\n\nexport const logOut = () => ({\n    type: Types.LOGOUT,\n    payload: {}\n})\n\nexport const changeOrders = (value: {orders: any[]}) => ({\n    type: Types.ORDERS,\n    payload: value\n})\n\nexport const changeIndex = (value: {index: number}) => ({\n    type: Types.INDEX,\n    payload: value\n})\n\nexport const changePageSize = (value: {pagesize: number}) => ({\n    type: Types.PAGESIZE,\n    payload: value\n})\n\nexport const changeCurrentOrder = (value: {currentOrder: any}) => ({\n    type: Types.CURRENTORDER,\n    payload: value\n})\n\nexport const changeOriginalOrder = (value: {originalOrder: any}) => ({\n    type: Types.ORIGINALORDER,\n    payload: value\n})\n\nexport const changeFieldsOrder = (value: {fieldsOrder: any}) => ({\n    type: Types.FIELDSORDER,\n    payload: value\n})\n\nexport const changeFileProducts = (value: {fileProducts: any}) => ({\n    type: Types.FILEPRODUCTS,\n    payload: value\n})\n\nexport const changeReceptionFailed = (value: {productsWithError: any}) => ({\n    type: Types.RECEPTIONFAILED,\n    payload: value\n})\n\nexport const changeReceptionSubmited = (value: {receptionsubmited: any}) => ({\n    type: Types.RECEPTIONSUBMITED,\n    payload: value\n})\n\nexport const changeReceptions = (value: {receptions: any}) => ({\n    type: Types.RECEPTIONS,\n    payload: value\n})\n\nexport const changeReceptionInfo = (value: {receptionInfo: any}) => ({\n    type: Types.RECEPTIONINFO,\n    payload: value\n})\n\nexport const changeFindOrder = (value: {findOrder: any}) => ({\n    type: Types.FINDORDER,\n    payload: value\n})\n\nexport const changeCancelOrderState = (value: {cancelOrder: any}) => ({\n    type: Types.CANCELORDERSTATE,\n    payload: value\n})\n\nexport const editOrder = (value: {edit: boolean}) => ({\n    type: Types.EDITORDER,\n    payload: value\n})\n\nexport const changefilterStateOrder = (value: {filterStateOrder: string}) => ({\n    type: Types.FILTERSTATEORDER,\n    payload: value\n})\n\n\n","import { Types } from './Actions'\nimport Menus from '../Menus/Types'\n\n\n// Declaração das variáveis globais e dos respetivos set's \n\nconst default_state: any = {\n    user: '', \n    password: '',\n    password2: '',\n    menu: Menus.CreateAccount,\n    email: '',\n    token: '',\n    orders: [],\n    index: 0,\n    pagesize: 9,\n    currentOrder: null,\n    originalOrder: null, \n    fieldsOrder: [], \n    fileProducts: null,\n    productsWithError: null,\n    receptionsubmited: [],\n    receptions: null, \n    receptionInfo: null, \n    findOrder: null,\n    cancelOrder: \"\",\n    filterStateOrder: \"\"\n}\n\nexport const loginReducer = function (state = default_state , action: any) {\n    var new_state: any = { ...state }\n\n    switch ( action.type ) {\n        case Types.LOGIN: \n            //console.log(action)\n            new_state.token = action.payload.token\n            return new_state;\n        case Types.MENU: \n            new_state.menu = action.payload.menu\n            return new_state\n        case Types.PASSWORD:\n            new_state.password = action.payload.password\n            return new_state\n        case Types.EMAIL:\n            new_state.email = action.payload.email\n            return new_state\n        case Types.USER:\n            new_state.user = action.payload.user\n            return new_state\n        case Types.PASSWORD2:\n            new_state.password2 = action.payload.password2\n            return new_state\n        case Types.ORDERS:\n            new_state.orders = action.payload.orders\n            new_state.index = default_state.index\n            new_state.pagesize = default_state.pagesize\n            return new_state\n        case Types.INDEX:\n            new_state.index = Math.max(0,Math.min(action.payload.index,state.orders.length - state.pagesize))\n            return new_state\n        case Types.PAGESIZE:\n            new_state.pagasize = action.payload.pagesize\n            return new_state\n        case Types.CURRENTORDER:\n            new_state.currentOrder = action.payload.currentOrder\n            return new_state\n        case Types.ORIGINALORDER:\n            new_state.originalOrder = action.payload.originalOrder\n            return new_state\n        case Types.EDITORDER:\n            new_state.edit = action.payload.edit\n            return new_state\n        case Types.FIELDSORDER:\n            new_state.fieldsOrder = action.payload.fieldsOrder\n            return new_state\n        case Types.FILEPRODUCTS:\n            new_state.fileProducts = action.payload.fileProducts\n            return new_state\n        case Types.RECEPTIONFAILED:\n            new_state.productsWithError = action.payload.productsWithError\n            return new_state\n        case Types.RECEPTIONSUBMITED:\n            new_state.receptionsubmited = action.payload.receptionsubmited\n            return new_state\n        case Types.RECEPTIONS:\n            new_state.receptions = action.payload.receptions\n            return new_state\n        case Types.RECEPTIONINFO:\n            new_state.receptionInfo = action.payload.receptionInfo\n            return new_state\n        case Types.FINDORDER:\n            new_state.findOrder = action.payload.findOrder\n            return new_state\n        case Types.CANCELORDERSTATE:\n            new_state.cancelOrder = action.payload.cancelOrder\n            return new_state\n        case Types.FILTERSTATEORDER:\n            new_state.filterStateOrder = action.payload.filterStateOrder\n            return new_state\n        case Types.LOGOUT:\n            return { ...default_state}\n        default: \n            return state;\n    } \n\n}","// Páginas\nconst Types = {\n    Login: \"Login\",\n    CreateAccount: \"CreateAccount\",\n    Products: \"Products\",\n    Workplace: \"Workplace\",\n    OrderInfo: \"OrderInfo\",\n    OrderInfoEdit: \"OrderInfoEdit\",\n    ProductsToEdit: \"ProductsToEdit\",\n    Stock: \"Stock\",\n    SearchOrder: \"SearchOrder\", \n    Receptions: \"Receptions\",\n    ReceptionInfo: \"ReceptionInfo\",\n};\n\nexport default Types","import { createStore } from 'redux'\nimport { loginReducer } from './Reducer'\n\nlet loginStore: any = createStore(loginReducer)\n\nexport default loginStore","import Login from './Login/Login'\nimport CreateAccount from './CreateAccount/CreateAccount';\nimport { Provider } from 'react-redux'\nimport loginStore from './UpdateState/Store'\nimport Workplace  from './Workplace/Workplace';\nimport OrderInfo from './OrderInfo/OrderInfo';\nimport Products from './Products/Products';\nimport ProductsToEdit from './Products/ProductsToEdit';\nimport Stock from './Stock/Stock';\nimport SearchOrder from './SearchOrder/SearchOrder';\nimport Receptions from './Receptions/Receptions';\nimport ReceptionInfo from './Receptions/ReceptionInfo';\n\n// App principal onde contem um Provider que contem todas as páginas ativando-as consoante o estado da variavel menu\n\nfunction App() {\n  return (\n    <Provider store={loginStore} >\n       <Login></Login>\n    </Provider>\n   \n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// index apenas faz o render de App\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}